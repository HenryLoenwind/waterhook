buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = "3.2.1"
group= "info.loenwind.waterhooks" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "waterhooks"

sourceCompatibility = 1.7
targetCompatibility = 1.7

minecraft {
    version = "1.9-12.16.0.1868-1.9"
    runDir = "run"
    mappings = "snapshot_20160312"
}

dependencies {
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // just throwing it here seems a bit "hacky", but hey, it works. 
    String contents = new File('src/main/java/info/loenwind/waterhooks/WaterHooksMod.java').getText('UTF-8') 
    contents = contents.replaceAll('VERSION = ".*"', 'VERSION = "' + project.version + '"')
    contents = contents.replaceAll('MODID = ".*"', 'MODID = "' + project.archivesBaseName + '"')
    new File('src/main/java/info/loenwind/waterhooks/WaterHooksMod.java').write(contents, 'UTF-8')

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    destinationDir = file '../dist'
    includeEmptyDirs = false
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'FMLCorePlugin': 'info.loenwind.waterhooks.WaterHooksCoreMod',
                   'FMLCorePluginContainsFMLMod': 'true'
    }
}
jar.doLast { task ->
    ant.checksum file: task.archivePath
}

runClient {
    jvmArgs '-Dfml.coreMods.load=info.loenwind.waterhooks.WaterHooksCoreMod'
}
runServer {
    jvmArgs '-Dfml.coreMods.load=info.loenwind.waterhooks.WaterHooksCoreMod'
}
